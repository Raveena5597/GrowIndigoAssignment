{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/vinodkumar/Desktop/Web2/OtpLogin/otp-app/src/Signup/OtpPage.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport history from '../history';\nimport axios from 'axios';\n\nfunction isNumeric(n) {\n  return !isNaN(parseInt(n)) && isFinite(n);\n}\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass OtpPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyCode = async () => {\n      console.log('Verify' + this.state);\n      const mobileno = 91 + this.state.mobileno;\n      await axios.get(\"http://localhost:8000/verify/verifycode\", {\n        params: {\n          phonenumber: mobileno,\n          code: this.state.otp\n        }\n      }).then(response => this.parseData(response)).catch(err => console.log(err));\n    };\n\n    this.findUser = async () => {\n      console.log('Verify' + this.state);\n      const mobileno = 91 + this.state.mobileno;\n      await axios.get(\"http://localhost:8000/findUser\", {\n        params: {\n          mobileno: mobileno\n        }\n      }).then(response => this.parseUserResponse(response)).catch(err => console.log(err));\n    };\n\n    this.state = this.props.location.state;\n    console.log(this.state);\n    this.state = {\n      mobileno: this.state.mobileno,\n      name: '',\n      email: '',\n      otp: '',\n      isLogin: this.state.isLogin\n    };\n  }\n\n  parseData(response) {\n    if (response.data.valid) {\n      if (this.state.isLogin) history.push('./success', this.state);else history.push('./userdetails', this.state);\n    } else {\n      window.alert('Invalid OTP.');\n    }\n  }\n\n  parseUserResponse(response) {\n    if (response.data.userexists) {\n      window.alert('You are logged in.');\n    } else {\n      window.alert('You are not registered with us. Please signup.');\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"otp\",\n                label: \"otp\",\n                type: \"number\",\n                value: this.state.otp,\n                onChange: e => this.setState({\n                  otp: e.target.value\n                }),\n                id: \"otp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            xs: 12,\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            disabled: this.state.otp.length !== 6 || !isNumeric(this.state.otp),\n            onClick: this.verifyCode,\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(OtpPage);","map":{"version":3,"sources":["/Users/vinodkumar/Desktop/Web2/OtpLogin/otp-app/src/Signup/OtpPage.js"],"names":["React","Button","CssBaseline","TextField","Grid","Typography","withStyles","Container","history","axios","isNumeric","n","isNaN","parseInt","isFinite","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","OtpPage","Component","constructor","props","verifyCode","console","log","state","mobileno","get","params","phonenumber","code","otp","then","response","parseData","catch","err","findUser","parseUserResponse","location","name","email","isLogin","data","valid","push","window","alert","userexists","render","classes","e","setState","target","value","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,SAAO,CAACC,KAAK,CAACC,QAAQ,CAACF,CAAD,CAAT,CAAN,IAAuBG,QAAQ,CAACH,CAAD,CAAtC;AACH;;AAED,MAAMI,SAAS,GAAIC,KAAD,KAAY;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEHC,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,aAAa,EAAE,QAHZ;AAIHC,IAAAA,UAAU,EAAE;AAJT,GADmB;AAO1BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFN,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAPoB;AAW1BM,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADJ;AAXkB,CAAZ,CAAlB;;AAgBA,MAAMQ,OAAN,SAAsB3B,KAAK,CAAC4B,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,UAbmB,GAaN,YAAY;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKC,KAA5B;AACA,YAAMC,QAAQ,GAAG,KAAK,KAAKD,KAAL,CAAWC,QAAjC;AACA,YAAM1B,KAAK,CAAC2B,GAAN,CAAU,yCAAV,EAAqD;AACvDC,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAEH,QADT;AAEJI,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM;AAFb;AAD+C,OAArD,EAMDC,IANC,CAMIC,QAAQ,IAAI,KAAKC,SAAL,CAAeD,QAAf,CANhB,EAODE,KAPC,CAOKC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAPZ,CAAN;AAQH,KAxBkB;;AAAA,SAuCnBC,QAvCmB,GAuCR,YAAY;AACnBd,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKC,KAA5B;AACA,YAAMC,QAAQ,GAAG,KAAK,KAAKD,KAAL,CAAWC,QAAjC;AACA,YAAM1B,KAAK,CAAC2B,GAAN,CAAU,gCAAV,EAA4C;AAC9CC,QAAAA,MAAM,EAAE;AACJF,UAAAA,QAAQ,EAAEA;AADN;AADsC,OAA5C,EAKDM,IALC,CAKIC,QAAQ,IAAI,KAAKK,iBAAL,CAAuBL,QAAvB,CALhB,EAMDE,KANC,CAMKC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CANZ,CAAN;AAOH,KAjDkB;;AAEf,SAAKX,KAAL,GAAa,KAAKJ,KAAL,CAAWkB,QAAX,CAAoBd,KAAjC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADZ;AAETc,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITV,MAAAA,GAAG,EAAE,EAJI;AAKTW,MAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWiB;AALX,KAAb;AAOH;;AAeDR,EAAAA,SAAS,CAACD,QAAD,EAAW;AAChB,QAAIA,QAAQ,CAACU,IAAT,CAAcC,KAAlB,EAAyB;AACrB,UAAI,KAAKnB,KAAL,CAAWiB,OAAf,EACI3C,OAAO,CAAC8C,IAAR,CAAa,WAAb,EAA0B,KAAKpB,KAA/B,EADJ,KAGI1B,OAAO,CAAC8C,IAAR,CAAa,eAAb,EAA8B,KAAKpB,KAAnC;AACP,KALD,MAKO;AACHqB,MAAAA,MAAM,CAACC,KAAP,CAAa,cAAb;AACH;AACJ;;AAgBDT,EAAAA,iBAAiB,CAACL,QAAD,EAAW;AACxB,QAAIA,QAAQ,CAACU,IAAT,CAAcK,UAAlB,EAA8B;AAC1BF,MAAAA,MAAM,CAACC,KAAP,CAAa,oBAAb;AACH,KAFD,MAEO;AACHD,MAAAA,MAAM,CAACC,KAAP,CAAa,gDAAb;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK7B,KAAzB;AACA,wBACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAE6B,OAAO,CAAC1C,KAAxB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAE0C,OAAO,CAACpC,IAAxB;AAA8B,UAAA,UAAU,MAAxC;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,QAAQ,MAFZ;AAGI,gBAAA,SAAS,MAHb;AAII,gBAAA,IAAI,EAAC,KAJT;AAKI,gBAAA,KAAK,EAAC,KALV;AAMI,gBAAA,IAAI,EAAC,QANT;AAOI,gBAAA,KAAK,EAAE,KAAKW,KAAL,CAAWM,GAPtB;AAQI,gBAAA,QAAQ,EAAEoB,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAErB,kBAAAA,GAAG,EAAEoB,CAAC,CAACE,MAAF,CAASC;AAAhB,iBAAd,CARnB;AASI,gBAAA,EAAE,EAAC;AATP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgBI,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAE,EAAZ;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,MAFb;AAGI,YAAA,OAAO,EAAC,WAHZ;AAII,YAAA,KAAK,EAAC,SAJV;AAKI,YAAA,SAAS,EAAEJ,OAAO,CAAClC,MALvB;AAMI,YAAA,QAAQ,EAAG,KAAKS,KAAL,CAAWM,GAAX,CAAewB,MAAf,KAA0B,CAA3B,IAAiC,CAACtD,SAAS,CAAC,KAAKwB,KAAL,CAAWM,GAAZ,CANzD;AAOI,YAAA,OAAO,EAAE,KAAKT,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AAnGiC;;AAsGtC,eAAezB,UAAU,CAACS,SAAD,CAAV,CAAsBY,OAAtB,CAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport history from '../history';\nimport axios from 'axios';\n\nfunction isNumeric(n) {\n    return !isNaN(parseInt(n)) && isFinite(n);\n}\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass OtpPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.location.state;\n        console.log(this.state)\n        this.state = {\n            mobileno: this.state.mobileno,\n            name: '',\n            email: '',\n            otp: '',\n            isLogin: this.state.isLogin\n        };\n    }\n\n    verifyCode = async () => {\n        console.log('Verify' + this.state)\n        const mobileno = 91 + this.state.mobileno;\n        await axios.get(\"http://localhost:8000/verify/verifycode\", {\n            params: {\n                phonenumber: mobileno,\n                code: this.state.otp\n            }\n        })\n            .then(response => this.parseData(response))\n            .catch(err => console.log(err));\n    }\n\n    parseData(response) {\n        if (response.data.valid) {\n            if (this.state.isLogin)\n                history.push('./success', this.state);\n            else\n                history.push('./userdetails', this.state);\n        } else {\n            window.alert('Invalid OTP.');\n        }\n    }\n\n    \n\n    findUser = async () => {\n        console.log('Verify' + this.state)\n        const mobileno = 91 + this.state.mobileno;\n        await axios.get(\"http://localhost:8000/findUser\", {\n            params: {\n                mobileno: mobileno\n            }\n        })\n            .then(response => this.parseUserResponse(response))\n            .catch(err => console.log(err));\n    }\n\n    parseUserResponse(response) {\n        if (response.data.userexists) {\n            window.alert('You are logged in.');\n        } else {\n            window.alert('You are not registered with us. Please signup.');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Verify OTP\n                </Typography>\n                    <div className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"otp\"\n                                    label=\"otp\"\n                                    type=\"number\"\n                                    value={this.state.otp}\n                                    onChange={e => this.setState({ otp: e.target.value })}\n                                    id=\"otp\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button xs={12}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={(this.state.otp.length !== 6) || !isNumeric(this.state.otp)}\n                            onClick={this.verifyCode}>\n                            Verify\n                            </Button>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(OtpPage);\n"]},"metadata":{},"sourceType":"module"}